# http://manual.macromates.com/en/language_grammars

'scopeName': 'source.xle'
'name': 'xle'
'fileTypes': [
  'lfg'
]

'patterns': [
  {'include': '#comments'}
  {'include': '#sections'}
]

'repository':

  'comments':

    'comment': 'define comments'
    'begin': '(")'
    'end': '(")'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.comment.xle'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.comment.xle'
    'name': 'comment.block.quoted.xle'

  'comments_morphology':

    'begin': '\\#'
    'end': '\n'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.comment.xle'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.comment.xle'
    'name': 'comment.line.number-sign.xle'

  'sections':

    'patterns': [
      {'include': '#section_config'}
      {'include': '#section_morphology'}
      {'include': '#section_rule'}
      {'include': '#section_template'}
      {'include': '#section_lexicon'}
    ]

  'section_config':

    'begin': '(\\w+\\s+\\w+\\s+CONFIG\\s+\\(\\d+\.\\d+\\))'
    'end': '(----)'
    'beginCaptures':
      '1':
        'name': 'entity.name.section.xle'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.keyword.xle'
    'contentName': 'meta.section.xle'
    'patterns': [
      {'include': '#comments'}
      {
        'begin': '(ROOTCAT)'
        'end': '(\\.)\\s*?\\n'
        'beginCaptures':
          '1':
            'name': 'keyword.other.xle'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.keyword.xle'
      }
      {
        'begin': '(LEXENTRIES)'
        'end': '(\\.)\\s*?\\n'
        'beginCaptures':
          '1':
            'name': 'keyword.other.xle'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.keyword.xle'
      }
      {
        'begin': '(RULES)'
        'end': '(\\.)\\s*?\\n'
        'beginCaptures':
          '1':
            'name': 'keyword.other.xle'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.keyword.xle'
      }
      {
        'begin': '(GOVERNABLERELATIONS)'
        'end': '(\\.)\\s*?\\n'
        'beginCaptures':
          '1':
            'name': 'keyword.other.xle'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.keyword.xle'
      }
      {
        'begin': '(TEMPLATES)'
        'end': '(\\.)\\s*?\\n'
        'beginCaptures':
          '1':
            'name': 'keyword.other.xle'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.keyword.xle'
      }
      {
        'begin': '(MORPHOLOGY)'
        'end': '(\\.)\\s*?\\n'
        'beginCaptures':
          '1':
            'name': 'keyword.other.xle'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.keyword.xle'
      }
      {
        'begin': '(EPSILON)'
        'end': '(\\.)\\s*?\\n'
        'beginCaptures':
          '1':
            'name': 'keyword.other.xle'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.keyword.xle'
      }
      {
        'begin': '(SEMANTICFUNCTIONS)'
        'end': '(\\.)\\s*?\\n'
        'beginCaptures':
          '1':
            'name': 'keyword.other.xle'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.keyword.xle'
      }
      {
        'begin': '(FILES)'
        'end': '(\\.)\\s*?\\n'
        'beginCaptures':
          '1':
            'name': 'keyword.other.xle'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.keyword.xle'
      }
      {
        'begin': '(OPTIMALITYORDER)'
        'end': '(\\.)\\s*?\\n'
        'beginCaptures':
          '1':
            'name': 'keyword.other.xle'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.keyword.xle'
      }
    ]

  'section_morphology':

    'begin': '(\\w+\\s+\\w+\\s+MORPHOLOGY\\s+\\(\\d+\.\\d+\\))'
    'end': '(----)'
    'beginCaptures':
      '1':
        'name': 'entity.name.section.xle'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.keyword.xle'
    'contentName': 'meta.section.xle'
    'patterns': [
      {'include': '#comments_morphology'}
    ]

  'section_rule':

    'begin': '(\\w+\\s+\\w+\\s+RULES\\s+\\(\\d+\.\\d+\\))'
    'end': '(----)'
    'beginCaptures':
      '1':
        'name': 'entity.name.section.xle'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.keyword.xle'
    'contentName': 'meta.section.xle'
    'patterns': [
      {'include': '#comments'}
      {'include': '#rules'}
      {'include': '#macro_declaration'}
      {'include': '#body'}
    ]

  'rules':

    'begin': '([\\w\']+|[\\w\']+\\[.*\\])\\s+(-->)'
    'end': '(\\.)'
    'beginCaptures':
      '1':
        'name': 'variable.other.xle'
      '2':
        'name': 'punctuation.definition.keyword.xle'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.keyword.xle'
    'contentName': 'meta.function.xle'
    'patterns': [
      {'include': '#f-structure-section'}
      {'include': '#body'}
    ]

  'f-structure-section':

    'match': '([\\w\'-]+)([\\*\\+]?)(:)'
    'captures':
      '1':
        'name': 'variable.other.xle'
      '2':
        'name': 'string.regexp.xle'
      '3':
        'name': 'punctuation.definition.keyword.xle'
    'patterns': [
      {'include': '#body'}
    ]

  'f-structure-definitions':

    'patterns': [
      {
        'match': '[!^$]'
        'name': 'storage.type.xle'
      }
      {
        'match': '(;)'
        'name': 'punctuation.definition.keyword.xle'
      }
      {
        'match': '=c'
        'name': 'punctuation.definition.xle'
      }
      {
        'match': '(\\()\\s*([!^])[^\\s]+?(\\))(?:\\s*(=)\\s*[^\\s]+?)?'
        'captures':
          '1':
            'name': 'punctuation.definition.xle'
          '2':
            'name': 'storage.type.xle'
          '3':
            'name': 'punctuation.definition.xle'
          '4':
            'name': 'punctuation.definition.xle'
        'patterns': [
          {'include': '#regex'}
        ]
      }
      {
        'match': '(\\^)\\s*(=)\\s*(!)'
        'captures':
          '1':
            'name': 'storage.type.xle'
          '2':
            'name': 'punctuation.definition.xle'
          '3':
            'name': 'storage.type.xle'
      }
    ]

  'macro_declaration':

    'begin': '([^(-->)]+?)\\s+?(=)'
    'end': '(\\.)'
    'beginCaptures':
      '1':
        'name': 'variable.other.xle'
      '2':
        'name': 'punctuation.definition.keyword.xle'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.keyword.xle'
    'patterns': [
      {'include': '#f-structure-section'}
      {'include': '#body'}
    ]

  'macro_call':

    'match': '(@)(.+?)'
    'captures':
      '1':
        'name': 'storage.type.xle'
      '2':
        'name': 'variable.parameter.xle'

  'section_template':

    'begin': '(\\w+\\s+\\w+\\s+TEMPLATES\\s+\\(\\d+\.\\d+\\))'
    'end': '(----)'
    'beginCaptures':
      '1':
        'name': 'entity.name.section.xle'
    'endCaptures':
        '1':
          'name': 'punctuation.definition.keyword.xle'
    'contentName': 'meta.section.xle'
    'patterns': [
      {'include': '#comments'}
      {'include': '#template_declaration'}
    ]

  'template_declaration':

    'begin': '(.+?)\\s+?(=)'
    'end': '(\\.)'
    'beginCaptures':
      '1':
        'name': 'variable.other.xle'
      '2':
        'name': 'punctuation.definition.keyword.xle'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.keyword.xle'
    'patterns': [
      {'include': '#body'}
    ]

  'template_call':

    'match': '(@)(\\()?.+?(\\))?'
    'captures':
      '1':
        'name': 'storage.type.xle'
      '2':
        'name': 'punctuation.definition.xle'
      '3':
        'name': 'punctuation.definition.xle'
    'patterns': [
      {'include': '#stem_definition'}
    ]

  'section_lexicon':

    'begin': '(\\w+\\s+\\w+\\s+LEXICON\\s+\\(\\d+\.\\d+\\))'
    'end': '(----)'
    'beginCaptures':
      '1':
        'name': 'entity.name.section.xle'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.keyword.xle'
    'contentName': 'meta.section.xle'
    'patterns': [
      {'include': '#lexicon_entry'}
      {'include': '#body'}
    ]

  'lexicon_entry':

    'begin': '([^\\s]+)?\\s+([^\\s]+)\\s+(?:(\\*)|((?:XLE|xle)))'
    'end': '(\\.|;)'
    'beginCaptures':
      '1':
        'name': 'string.unquoted'
      '2':
        'name': 'variable.other.xle'
      '3':
        'name': 'punctuation.definition.keyword.xle'
      '4':
        'name': 'keyword.other.xle'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.keyword.xle'
    'contentName': 'meta.function.xle'
    'patterns': [
      {'include': '#lexicon_entry'}
      {'include': '#body'}
    ]

  'subcat':

    'match': '(<).*?(>)'
    'captures':
      '1':
        'name': 'punctuation.definition.keyword.xle'
      '2':
        'name': 'punctuation.definition.keyword.xle'
    'patterns': [
      {'include': '#body'}
    ]

  'regex':

    'patterns': [
      {'include': '#kleene_star'}
      {'include': '#grouping_brackets_square'}
      {'include': '#disjunction'}
      #{'include': '#optionality'}
      {'include': '#negation_scope'}
      {'include': '#negation'}
      {'include': '#f-structure-section'}
      {'include': '#body'}
      ]

  'kleene_star':

    'match': '\\*'
    'name': 'string.regexp.xle'

  'grouping_brackets_square':

    'begin': '(\\[)'
    'end': '(\\])'
    'beginCaptures':
      '1':
        'name': 'string.regexp.xle'
    'endCaptures':
      '1':
        'name': 'string.regexp.xle'
    'patterns': [
      {'include': '#body'}
    ]

  'disjunction':

    'begin': '({)'
    'end': '(})'
    'beginCaptures':
      '1':
        'name': 'string.regexp.xle'
    'endCaptures':
      '1':
        'name': 'string.regexp.xle'
    'patterns': [
      {'include': '#disjunction'}
      'match': '\\|'
      'name': 'string.regexp.xle'
      {'include': '#disjunction'}
      {'include': '#body'}
    ]

  'optionality':

    'begin': '(?<!@)(\\()(?!\\s*[!\\^])'
    'end': '(\\))'
    'beginCaptures':
      '1':
        'name': 'string.regexp.xle'
    'endCaptures':
      '1':
        'name': 'string.regexp.xle'
    'patterns': [
      {'include': '#optionality'}
      {'include': '#body'}
    ]

  'negation':

    'match': '~'
    'name': 'string.regexp.xle'

  'negation_scope':

    'begin': '(~)(\\[)'
    'end': '(\\])'
    'beginCaptures':
      '1':
        'name': 'string.regexp.xle'
      '2':
        'name': 'string.regexp.xle'
    'endCaptures':
      '1':
        'name': 'string.regexp.xle'
    'patterns': [
      {'include': '#negation'}
      {'include': '#body'}
    ]

  'xle_keywords':

    'patterns': [
      {'include': '#stem_definition'}
      {'include': '#optimality'}
    ]

  'stem_definition':

    'match': '%stem'
    'name': 'variable.language.xle'

  'optimality':

    'match': 'o::\\*'
    'name': 'variable.language.xle'

  'body':

    'patterns': [
      {'include': '#xle_keywords'}
      {'include': '#regex'}
      {'include': '#template_call'}
      {'include': '#macro_call'}
      {'include': '#comments'}
      {'include': '#f-structure-definitions'}
      {'include': '#subcat'}
    ]
